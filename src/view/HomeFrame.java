/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import DAO.Conexao;
import DAO.HistoricoDAO;
import DAO.MusicaDAO;
import DAO.PlaylistMusicaDAO;
import controller.ControllerCurtida;
import controller.ControllerMusica;
import controller.ControllerPlaylist;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Musica;
import model.Usuario;
import java.sql.*;
import model.Playlist;


/**
 *
 * @author Junior
 */
public class HomeFrame extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public HomeFrame(Usuario usuarioLogado) {
        initComponents();

        this.usuarioLogado = usuarioLogado;
        cm = new ControllerMusica(this);
        cp = new ControllerPlaylist(usuarioLogado);
        
        DefaultTableModel tableMusicas = new DefaultTableModel();
        
        tableMusicas.addColumn("ID");
        tableMusicas.addColumn("Nome");
        tableMusicas.addColumn("G√™nero");
        tableMusicas.addColumn("Artista");
        tableMusicas.addColumn("Curtidas");
        tableMusicas.addColumn("Descurtidas");
        tbl_musicas.setModel(tableMusicas);
        
        DefaultTableModel tableCurtidas = new DefaultTableModel();
        tableCurtidas.addColumn("ID");
        tableCurtidas.addColumn("Nome");
        tableCurtidas.addColumn("G√™nero");
        tableCurtidas.addColumn("Artista");
        tbl_curtidas.setModel(tableCurtidas);
        
        DefaultTableModel tableDescurtidas = new DefaultTableModel();
        tableDescurtidas.addColumn("ID");
        tableDescurtidas.addColumn("Nome");
        tableDescurtidas.addColumn("G√™nero");
        tableDescurtidas.addColumn("Artista");
        tbl_descurtidas.setModel(tableDescurtidas);
        
        DefaultTableModel tableHistorico = new DefaultTableModel();
        tableHistorico.addColumn("ID");
        tableHistorico.addColumn("Nome");
        tableHistorico.addColumn("G√™nero");
        tableHistorico.addColumn("Artista");
        tbl_historico.setModel(tableHistorico);
        
        DefaultTableModel tablePlaylists = new DefaultTableModel();
        tablePlaylists.addColumn("ID");
        tablePlaylists.addColumn("Nome");
        tbl_playlists.setModel(tablePlaylists);
        
        DefaultTableModel tableMusicasPlaylist = new DefaultTableModel();
        tableMusicasPlaylist.addColumn("ID");
        tableMusicasPlaylist.addColumn("Nome");
        tableMusicasPlaylist.addColumn("G√™nero");
        tableMusicasPlaylist.addColumn("Artista");
        tbl_musicas_playlists.setModel(tableMusicasPlaylist);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Buscar = new javax.swing.JPanel();
        txt_nome_buscar = new javax.swing.JTextField();
        bt_buscar = new javax.swing.JButton();
        lbl_buscar_home = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_musicas = new javax.swing.JTable();
        bt_curtir = new javax.swing.JButton();
        bt_descurtir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Curtidas = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_curtidas = new javax.swing.JTable();
        lbl_musicas_curtidas = new javax.swing.JLabel();
        bt_atualizar_curtidas = new javax.swing.JButton();
        Descurtidas = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_descurtidas = new javax.swing.JTable();
        lbl_musicas_descurtidas = new javax.swing.JLabel();
        bt_atualizar_descurtidas = new javax.swing.JButton();
        Historico = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_historico = new javax.swing.JTable();
        bt_atualizar_historico = new javax.swing.JButton();
        lbl_historico = new javax.swing.JLabel();
        Playlists = new javax.swing.JPanel();
        lbl_nome_playlist = new javax.swing.JLabel();
        txt_nome_playlist = new javax.swing.JTextField();
        bt_criar_playlist = new javax.swing.JButton();
        bt_editar_playlist = new javax.swing.JButton();
        bt_excluir_playlist = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_playlists = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_musicas_playlists = new javax.swing.JTable();
        bt_adicionar_playlist = new javax.swing.JButton();
        bt_remover_playlist = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bt_buscar.setText("Buscar");
        bt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscarActionPerformed(evt);
            }
        });

        lbl_buscar_home.setText("Buscar M√∫sicas");

        tbl_musicas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_musicas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_musicasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_musicas);

        bt_curtir.setText("üëç");
        bt_curtir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_curtirActionPerformed(evt);
            }
        });

        bt_descurtir.setText("üëé");
        bt_descurtir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_descurtirActionPerformed(evt);
            }
        });

        jLabel1.setText("Selecione a m√∫sica que deseja curtir");

        javax.swing.GroupLayout BuscarLayout = new javax.swing.GroupLayout(Buscar);
        Buscar.setLayout(BuscarLayout);
        BuscarLayout.setHorizontalGroup(
            BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscarLayout.createSequentialGroup()
                .addGroup(BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BuscarLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BuscarLayout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addComponent(bt_buscar))
                    .addGroup(BuscarLayout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(txt_nome_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BuscarLayout.createSequentialGroup()
                        .addGap(419, 419, 419)
                        .addComponent(lbl_buscar_home))
                    .addGroup(BuscarLayout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(jLabel1))
                    .addGroup(BuscarLayout.createSequentialGroup()
                        .addGap(422, 422, 422)
                        .addComponent(bt_curtir)
                        .addGap(18, 18, 18)
                        .addComponent(bt_descurtir)))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        BuscarLayout.setVerticalGroup(
            BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscarLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lbl_buscar_home)
                .addGap(18, 18, 18)
                .addComponent(txt_nome_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(bt_buscar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_curtir)
                    .addComponent(bt_descurtir))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Buscar", Buscar);

        tbl_curtidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_curtidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_curtidasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_curtidas);

        lbl_musicas_curtidas.setText("Musicas curtidas");

        bt_atualizar_curtidas.setText("Atualizar");
        bt_atualizar_curtidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_atualizar_curtidasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CurtidasLayout = new javax.swing.GroupLayout(Curtidas);
        Curtidas.setLayout(CurtidasLayout);
        CurtidasLayout.setHorizontalGroup(
            CurtidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurtidasLayout.createSequentialGroup()
                .addGroup(CurtidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CurtidasLayout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CurtidasLayout.createSequentialGroup()
                        .addGap(412, 412, 412)
                        .addComponent(lbl_musicas_curtidas))
                    .addGroup(CurtidasLayout.createSequentialGroup()
                        .addGap(421, 421, 421)
                        .addComponent(bt_atualizar_curtidas)))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        CurtidasLayout.setVerticalGroup(
            CurtidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CurtidasLayout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(lbl_musicas_curtidas)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(bt_atualizar_curtidas)
                .addGap(119, 119, 119))
        );

        jTabbedPane1.addTab("Curtidas", Curtidas);

        Descurtidas.setVerifyInputWhenFocusTarget(false);

        tbl_descurtidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_descurtidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_descurtidasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbl_descurtidas);

        lbl_musicas_descurtidas.setText("M√∫sicas descurtidas");

        bt_atualizar_descurtidas.setText("Atualizar");
        bt_atualizar_descurtidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_atualizar_descurtidasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DescurtidasLayout = new javax.swing.GroupLayout(Descurtidas);
        Descurtidas.setLayout(DescurtidasLayout);
        DescurtidasLayout.setHorizontalGroup(
            DescurtidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DescurtidasLayout.createSequentialGroup()
                .addGroup(DescurtidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DescurtidasLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DescurtidasLayout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(lbl_musicas_descurtidas))
                    .addGroup(DescurtidasLayout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addComponent(bt_atualizar_descurtidas)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        DescurtidasLayout.setVerticalGroup(
            DescurtidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DescurtidasLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(lbl_musicas_descurtidas)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(bt_atualizar_descurtidas)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Descurtidas", Descurtidas);

        tbl_historico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_historico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_historicoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbl_historico);

        bt_atualizar_historico.setText("Atualizar hist√≥rico");
        bt_atualizar_historico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_atualizar_historicoActionPerformed(evt);
            }
        });

        lbl_historico.setText("Hist√≥rico de pesquisa");

        javax.swing.GroupLayout HistoricoLayout = new javax.swing.GroupLayout(Historico);
        Historico.setLayout(HistoricoLayout);
        HistoricoLayout.setHorizontalGroup(
            HistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistoricoLayout.createSequentialGroup()
                .addGroup(HistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HistoricoLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HistoricoLayout.createSequentialGroup()
                        .addGap(404, 404, 404)
                        .addComponent(lbl_historico))
                    .addGroup(HistoricoLayout.createSequentialGroup()
                        .addGap(397, 397, 397)
                        .addComponent(bt_atualizar_historico)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        HistoricoLayout.setVerticalGroup(
            HistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistoricoLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(lbl_historico)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(bt_atualizar_historico)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Historico", Historico);

        lbl_nome_playlist.setText("Nome: ");

        bt_criar_playlist.setText("Criar");
        bt_criar_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_criar_playlistActionPerformed(evt);
            }
        });

        bt_editar_playlist.setText("Editar");
        bt_editar_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editar_playlistActionPerformed(evt);
            }
        });

        bt_excluir_playlist.setText("Excluir");
        bt_excluir_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excluir_playlistActionPerformed(evt);
            }
        });

        tbl_playlists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_playlists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_playlistsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_playlists);

        tbl_musicas_playlists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tbl_musicas_playlists);

        bt_adicionar_playlist.setText("Adicionar");
        bt_adicionar_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_adicionar_playlistActionPerformed(evt);
            }
        });

        bt_remover_playlist.setText("Remover");
        bt_remover_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_remover_playlistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PlaylistsLayout = new javax.swing.GroupLayout(Playlists);
        Playlists.setLayout(PlaylistsLayout);
        PlaylistsLayout.setHorizontalGroup(
            PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlaylistsLayout.createSequentialGroup()
                .addGroup(PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PlaylistsLayout.createSequentialGroup()
                        .addGroup(PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PlaylistsLayout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(lbl_nome_playlist)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_nome_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlaylistsLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addGroup(PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PlaylistsLayout.createSequentialGroup()
                                .addComponent(bt_criar_playlist)
                                .addGap(18, 18, 18)
                                .addComponent(bt_editar_playlist)
                                .addGap(18, 18, 18)
                                .addComponent(bt_excluir_playlist))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PlaylistsLayout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(bt_adicionar_playlist)
                        .addGap(199, 199, 199)
                        .addComponent(bt_remover_playlist)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        PlaylistsLayout.setVerticalGroup(
            PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlaylistsLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nome_playlist)
                    .addComponent(txt_nome_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_criar_playlist)
                    .addComponent(bt_editar_playlist)
                    .addComponent(bt_excluir_playlist))
                .addGap(87, 87, 87)
                .addGroup(PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(60, 60, 60)
                .addGroup(PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_adicionar_playlist)
                    .addComponent(bt_remover_playlist))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Playlists", Playlists);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_descurtirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_descurtirActionPerformed
        int linha = tbl_musicas.getSelectedRow();

        if (linha != -1) {
            int musicaId = (int) tbl_musicas.getValueAt(linha, 0);
            int usuarioId = usuarioLogado.getId();

            ControllerCurtida.descurtir(usuarioId, musicaId);
            JOptionPane.showMessageDialog(this, "M√∫sica descurtida.");

            bt_buscar.doClick();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma m√∫sica na tabela primeiro.");
        }
    }//GEN-LAST:event_bt_descurtirActionPerformed

    private void bt_curtirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_curtirActionPerformed
        int linha = tbl_musicas.getSelectedRow();

        if (linha != -1) {
            int musicaId = (int) tbl_musicas.getValueAt(linha, 0); // coluna 0 = ID
            int usuarioId = usuarioLogado.getId(); // ou como voc√™ estiver armazenando o usu√°rio

            ControllerCurtida.curtir(usuarioId, musicaId);
            JOptionPane.showMessageDialog(this, "M√∫sica curtida com sucesso!");

            bt_buscar.doClick();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma m√∫sica na tabela primeiro.");
        }
    }//GEN-LAST:event_bt_curtirActionPerformed

    private void tbl_musicasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_musicasMouseClicked
        int linha = tbl_musicas.getSelectedRow();
        if (linha != -1) {
            int musicaId = (int) tbl_musicas.getValueAt(linha, 0);
            int usuarioId = usuarioLogado.getId();

            boolean curtiu = ControllerCurtida.usuarioCurtiu(usuarioId, musicaId);

            if (curtiu) {
                JOptionPane.showMessageDialog(this, "‚ù§Ô∏è Voc√™ j√° curtiu esta m√∫sica!");
            }
        }
    }//GEN-LAST:event_tbl_musicasMouseClicked

    private void bt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscarActionPerformed
        String busca = txt_nome_buscar.getText();
        List<Musica> musicas = cm.buscarMusica(busca);

        DefaultTableModel modelo = (DefaultTableModel) tbl_musicas.getModel();
        modelo.setRowCount(0);

        if (musicas == null || musicas.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "M√∫sica n√£o encontrada!",
                "Aviso",
                JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        for (Musica m : musicas) {
            modelo.addRow(new Object[] {
                m.getId(),
                m.getNome(),
                m.getGenero(),
                m.getArtista().getNome(),
                m.getCurtidas(),
                m.getDescurtidas()

            });
        }
        
        try {
            Connection conn = new Conexao().getConnection();
            HistoricoDAO dao = new HistoricoDAO(conn);

            for (Musica m : musicas) {
                dao.inserir(usuarioLogado.getId(), m.getId());
            }

            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_bt_buscarActionPerformed

    private void tbl_curtidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_curtidasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_curtidasMouseClicked

    private void bt_atualizar_curtidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_atualizar_curtidasActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tbl_curtidas.getModel();
        modelo.setRowCount(0);

        List<Musica> curtidas = cm.listarCurtidas(usuarioLogado.getId());

        for (Musica m : curtidas) {
            modelo.addRow(new Object[]{
                m.getId(),
                m.getNome(),
                m.getGenero(),
                m.getArtista().getNome()
            });
        }
    }//GEN-LAST:event_bt_atualizar_curtidasActionPerformed

    private void tbl_descurtidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_descurtidasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_descurtidasMouseClicked

    private void bt_atualizar_descurtidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_atualizar_descurtidasActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tbl_descurtidas.getModel();
        modelo.setRowCount(0);

        List<Musica> descurtidas = cm.listarDescurtidas(usuarioLogado.getId());

        for (Musica m : descurtidas) {
            modelo.addRow(new Object[]{
                m.getId(),
                m.getNome(),
                m.getGenero(),
                m.getArtista().getNome()
            });
        }
    }//GEN-LAST:event_bt_atualizar_descurtidasActionPerformed

    private void tbl_historicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_historicoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_historicoMouseClicked

    private void bt_atualizar_historicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_atualizar_historicoActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tbl_historico.getModel();
        modelo.setRowCount(0); // limpa a tabela

        try {
            Connection conn = new Conexao().getConnection();
            HistoricoDAO dao = new HistoricoDAO(conn);
            List<Musica> historico = dao.listarHistorico(usuarioLogado.getId());
            conn.close();

            for (Musica m : historico) {
                modelo.addRow(new Object[]{
                    m.getId(),
                    m.getNome(),
                    m.getGenero(),
                    m.getArtista().getNome()
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_bt_atualizar_historicoActionPerformed
    
    private void atualizarTabelaPlaylists() {
        DefaultTableModel modelo = (DefaultTableModel) tbl_playlists.getModel();
        modelo.setRowCount(0);

        List<Playlist> playlists = cp.listarPlaylists();

        for (Playlist p : playlists) {
            modelo.addRow(new Object[]{p.getId(), p.getNome()});
        }
    }
    
    
    
    private void bt_criar_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_criar_playlistActionPerformed
        String nome = txt_nome_playlist.getText();

        if (nome.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite um nome para a playlist.");
            return;
        }

        cp.criarPlaylist(nome);
        atualizarTabelaPlaylists();
        txt_nome_playlist.setText("");
    }//GEN-LAST:event_bt_criar_playlistActionPerformed

    private void bt_editar_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editar_playlistActionPerformed
        int linha = tbl_playlists.getSelectedRow();
        String novoNome = txt_nome_playlist.getText();

        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma playlist para editar.");
            return;
        }

        if (novoNome.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite o novo nome da playlist.");
            return;
        }

        int id = (int) tbl_playlists.getValueAt(linha, 0);

        cp.editarPlaylist(id, novoNome);
        atualizarTabelaPlaylists();
        txt_nome_playlist.setText("");
    }//GEN-LAST:event_bt_editar_playlistActionPerformed

    private void bt_excluir_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_excluir_playlistActionPerformed
        int linha = tbl_playlists.getSelectedRow();

        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma playlist para excluir.");
            return;
        }

        int id = (int) tbl_playlists.getValueAt(linha, 0);

        int confirmacao = JOptionPane.showConfirmDialog(this,
                "Tem certeza que deseja excluir esta playlist?",
                "Confirma√ß√£o", JOptionPane.YES_NO_OPTION);

        if (confirmacao == JOptionPane.YES_OPTION) {
            cp.excluirPlaylist(id);
            atualizarTabelaPlaylists();
            txt_nome_playlist.setText("");
        }
    }//GEN-LAST:event_bt_excluir_playlistActionPerformed

    private void tbl_playlistsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_playlistsMouseClicked
        int linha = tbl_playlists.getSelectedRow();
        if (linha == -1) return;

        int playlistId = (int) tbl_playlists.getValueAt(linha, 0);

        DefaultTableModel modelo = (DefaultTableModel) tbl_musicas_playlists.getModel();
        modelo.setRowCount(0);

        try {
            Connection conn = new Conexao().getConnection();
            PlaylistMusicaDAO dao = new PlaylistMusicaDAO(conn);
            List<Musica> musicas = dao.listarPorPlaylist(playlistId);
            conn.close();

            for (Musica m : musicas) {
                modelo.addRow(new Object[]{
                    m.getId(),
                    m.getNome(),
                    m.getGenero(),
                    m.getArtista().getNome()
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tbl_playlistsMouseClicked

    
    private void preencherMusicasDaPlaylist(int playlistId) {
        try {
            Connection conn = new Conexao().getConnection();
            PlaylistMusicaDAO dao = new PlaylistMusicaDAO(conn);
            List<Musica> musicas = dao.listarPorPlaylist(playlistId);
            conn.close();

            DefaultTableModel modelo = (DefaultTableModel) tbl_musicas_playlists.getModel();
            modelo.setRowCount(0);

            for (Musica m : musicas) {
                modelo.addRow(new Object[]{
                    m.getId(),
                    m.getNome(),
                    m.getGenero(),
                    m.getArtista().getNome()
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
    }
}
    
    private void bt_adicionar_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_adicionar_playlistActionPerformed
        int linhaPlaylist = tbl_playlists.getSelectedRow();
        if (linhaPlaylist == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma playlist.");
            return;
        }

        int playlistId = (int) tbl_playlists.getValueAt(linhaPlaylist, 0);

        try {
            Connection conn = new Conexao().getConnection();

            MusicaDAO musicaDAO = new MusicaDAO(conn);
            List<Musica> musicas = musicaDAO.buscarMusica("");

            String[] opcoes = new String[musicas.size()];
            for (int i = 0; i < musicas.size(); i++) {
                opcoes[i] = musicas.get(i).getId() + " - " + musicas.get(i).getNome();
            }

            String selecionada = (String) JOptionPane.showInputDialog(
                this,
                "Selecione a m√∫sica para adicionar √† playlist:",
                "Adicionar M√∫sica",
                JOptionPane.PLAIN_MESSAGE,
                null,
                opcoes,
                opcoes[0]
            );

            if (selecionada != null) {
                int musicaId = Integer.parseInt(selecionada.split(" - ")[0]);

                PlaylistMusicaDAO dao = new PlaylistMusicaDAO(conn);
                dao.adicionarMusica(playlistId, musicaId);

                preencherMusicasDaPlaylist(playlistId);
            }

            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao adicionar m√∫sica.");
        }
    }//GEN-LAST:event_bt_adicionar_playlistActionPerformed

    private void bt_remover_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_remover_playlistActionPerformed
        int linhaPlaylist = tbl_playlists.getSelectedRow();
        int linhaMusica = tbl_musicas_playlists.getSelectedRow();

        if (linhaPlaylist == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma playlist.");
            return;
        }

        if (linhaMusica == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma m√∫sica para remover.");
            return;
        }

        int playlistId = (int) tbl_playlists.getValueAt(linhaPlaylist, 0);
        int musicaId = (int) tbl_musicas_playlists.getValueAt(linhaMusica, 0);

        try {
            Connection conn = new Conexao().getConnection();
            PlaylistMusicaDAO dao = new PlaylistMusicaDAO(conn);
            dao.removerMusica(playlistId, musicaId);
            conn.close();

            preencherMusicasDaPlaylist(playlistId);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao remover m√∫sica da playlist.");
        }
    }//GEN-LAST:event_bt_remover_playlistActionPerformed

    /**
     * @param args the command line arguments
     */
    
//Comentando o main pra nao ser possivel entrar na home sem um usuario
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new HomeFrame().setVisible(true);
//            }
//        });
//    }
    
    
    private ControllerMusica cm;
    private Usuario usuarioLogado;
    private ControllerPlaylist cp;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Buscar;
    private javax.swing.JPanel Curtidas;
    private javax.swing.JPanel Descurtidas;
    private javax.swing.JPanel Historico;
    private javax.swing.JPanel Playlists;
    private javax.swing.JButton bt_adicionar_playlist;
    private javax.swing.JButton bt_atualizar_curtidas;
    private javax.swing.JButton bt_atualizar_descurtidas;
    private javax.swing.JButton bt_atualizar_historico;
    private javax.swing.JButton bt_buscar;
    private javax.swing.JButton bt_criar_playlist;
    private javax.swing.JButton bt_curtir;
    private javax.swing.JButton bt_descurtir;
    private javax.swing.JButton bt_editar_playlist;
    private javax.swing.JButton bt_excluir_playlist;
    private javax.swing.JButton bt_remover_playlist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_buscar_home;
    private javax.swing.JLabel lbl_historico;
    private javax.swing.JLabel lbl_musicas_curtidas;
    private javax.swing.JLabel lbl_musicas_descurtidas;
    private javax.swing.JLabel lbl_nome_playlist;
    private javax.swing.JTable tbl_curtidas;
    private javax.swing.JTable tbl_descurtidas;
    private javax.swing.JTable tbl_historico;
    private javax.swing.JTable tbl_musicas;
    private javax.swing.JTable tbl_musicas_playlists;
    private javax.swing.JTable tbl_playlists;
    private javax.swing.JTextField txt_nome_buscar;
    private javax.swing.JTextField txt_nome_playlist;
    // End of variables declaration//GEN-END:variables
}
